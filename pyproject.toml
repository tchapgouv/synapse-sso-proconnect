[project]
name = "synapse-sso-proconnect"
description = "Mapping class and hook to handle Pro Connect OpenId integration"
readme = "README.md"
dynamic = ["version"]

requires-python = ">=3.8"

classifiers = [
  "License :: OSI Approved :: Apache Software License"
]

dependencies = [
  "attrs"
]

[project.optional-dependencies]
dev = [
  # for tests
  "pydantic >= 1.7.4, < 2.0",
  "matrix-synapse == 1.103.0",
  "tox",
  "twisted",
  "aiounittest",
  # for type checking
  "mypy == 1.6.1",
  # for linting
  "black == 23.10.0",
  "ruff == 0.1.1",
]

[project.urls]
#repository = "https://github.com/tchapgouv/synapse-sso-proconnect"

[build-system]
requires = ["setuptools", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.mypy]
strict = true

[tool.ruff]
line-length = 88

# See https://docs.astral.sh/ruff/rules/#error-e
# for error codes. The ones we ignore are:
#  E501: Line too long (black enforces this for us)
#  E731: do not assign a lambda expression, use a def
#
# flake8-bugbear compatible checks. Its error codes are described at
# https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
#  B023: Functions defined inside a loop must not use variables redefined in the loop
ignore = [
    "B023",
    "E501",
    "E731",
]
select = [
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # flake8-bugbear
    "B0",
    # flake8-comprehensions
    "C4",
    # flake8-2020
    "YTT",
    # flake8-slots
    "SLOT",
    # flake8-debugger
    "T10",
    # flake8-pie
    "PIE",
    # flake8-executable
    "EXE",
    # isort
    "I",
]

